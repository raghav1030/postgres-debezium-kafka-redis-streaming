version: "3.7"
services:
  postgres:
    image: debezium/postgres:13
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=exampledb

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: 
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092

  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: 
      - kafka
    ports:
      - 8083:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: 
      - zookeeper
      - kafka

  golang-service:
    image: golang:alpine
    working_dir: /app
    volumes:
      - ./cmd:/app
    command: go run main.go
    environment:
      - REDIS_URL=redis:6379
      - POSTGRES_URL=postgres://docker:docker@postgres:5432/exampledb
      - KAFKA_BROKER_URL=kafka:9092
    ports:
      - 8080:8080
    depends_on: 
      - postgres
      - kafka
      - debezium
      - redis

  redis:
    image: redis:alpine
    ports:
      - 6379:6379

  # node-backend:
  #   image: node:18
  #   working_dir: /app
  #   volumes:
  #     - ./backend:/app
  #   command: yarn start
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - 3000:3000
  #   depends_on: 
  #     - postgres
  #     - kafka
  #     - debezium
  #     - redis

  # redis:
  #   image: redis:alpine
  #   ports:
  #     - 6379:6379





# curl --location 'http://localhost:8083/connectors' \
# --header 'Content-Type: application/json' \
# --data '{
#   "name": "exampledb-connector",
#   "config": {
#     "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
#     "plugin.name": "pgoutput",
#     "database.hostname": "postgres",
#     "database.port": "5432",
#     "database.user": "docker",
#     "database.password": "docker",
#     "database.dbname": "exampledb",
#     "database.server.name": "postgres",
#     "table.include.list": "public.student"
#   }
# }'

# ALTER TABLE public.student REPLICA IDENTITY FULL;



# docker run --tty --network postgres-debezium-kafka-redis-streaming_default   confluentinc/cp-kafkacat   kafkacat -C -b kafka:9092   -s key=s -s value=avro -r http://schema-registry:8081   -t postgres.public.student